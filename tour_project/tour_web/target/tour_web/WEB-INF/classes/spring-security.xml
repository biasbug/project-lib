<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <bean id="myAuthenticationFilter" class="filter.MyAuthenticationFilter"></bean>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
    <!--直接释放无需经过SpringSecurity过滤器的静态资源-->
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/favicon.ico" security="none"/>
    <!--security配置信息-->
    <!--
        auto-config="true":开启数据保护，和下面的intercept-url标签配套
        use-expressions：是否开启表达式
        access-decision-manager-ref:指定了自定义的访问策略管理器
    -->
    <security:http auto-config="true" use-expressions="true" >
        <security:intercept-url pattern="/login.jsp" access="permitAll()"/>
        <!--访问所有资源需要ADMIN权限-->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>

        <!--
            login-page：登录的页面
            login-processing-url：点击登录时访问的地址
            default-target-url:登录成功默认跳转的页面
            authentication-failure-url:重定向的页面
            authentication-failure-handler-ref：登录失败的处理器
            always-use-default-target：指定了是否在身份验证通过后总是跳转到default-target-url属性指定的URL

        -->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login"
                             default-target-url="/index.jsp"
                             authentication-failure-url="/failer.jsp"
                             always-use-default-target="true"/>

        <!--
        logout-url:指定了用于响应退出系统请求的URL。其默认值为/logout
        logout-success-url：退出登录成功后跳转的页面
        invalidate-session:退出后是否销毁session
        -->
        <security:logout logout-url="/logout" logout-success-url="/login.jsp" invalidate-session="true"/>

        <!--关闭csrf功能-->
        <security:csrf disabled="true"></security:csrf>

        <!--开启记住我功能，记住时间为60s-->
        <security:remember-me data-source-ref="dataSource" token-validity-seconds="60"  remember-me-parameter="remember-me"></security:remember-me>


        <!--
            session管理设置
            max-sessions="1":这只账号允许登录的最大次数，当设置为1时，第二次登录后前面的session会被清空
            invalid-session-url:session超时后跳转的页面
            error-if-maximum-exceeded：为true时系统会拒绝第二次登录
            session-fixation-protection：防止会话伪造的方式，一般默认就好无需配置
        -->
        <!--<security:session-management session-fixation-protection="none">-->
            <!--<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"></security:concurrency-control>-->
        <!--</security:session-management>-->


        <security:custom-filter ref="myAuthenticationFilter" after="FILTER_SECURITY_INTERCEPTOR"></security:custom-filter>



    </security:http>

    <!--security认证信息-->
    <security:authentication-manager>
        <!--<security:authentication-provider>-->
            <!--<security:user-service>-->
                <!--<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN,ROLE_USER"></security:user>-->
                <!--<security:user authorities="ROLE_USER" name="user" password="{noop}user"></security:user>-->
            <!--</security:user-service>-->
        <!--</security:authentication-provider>-->
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>